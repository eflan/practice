1. You are given two 32-bit numbers, N and M, and two bit positions, i and j. Write and a method to insert M into N such that M starts at bit j and ends at bit i. You can assume that the bits j through i have enough space to fit all of M. That is, if M = 10011, you can assume that there are at least 5 bits between j and i. You would not, for example, have j = 3 and i = 2, because M could not fully fit between bit 3 and 2. INPUT N = 10000000000, M = 10011, i = 2, j = 6. OUTPUT N = 10001001100

2. Given a real number between 0 and 1 (e.g., 0.72) that is passed in as a double print the binary representation. If the number cannot be represented accurately in binary using at most 32 characters, print "ERROR".

3. Given a positive integer, print the next smallest and next largest number that have the same number of one bits in their binary represenation.

5.4 Explain what the following code does: ((n & (n - 1)) == 0?

5.5 Write a program to determine the number of bits you would need to flip in order to turn a number A into a number B.
EXAMPLE:
INPUT 29 a.k.a. 11101 into 15 a.k.a. 01111
OUTPUT 2

5.6 Write a program to swap odd and even bits in an integer with as few instructions as possible. (e.g. bit 0 and bit 1 are swapped, bit 3 and bit 5 are swapped, and so on.

5.7 An array contains all the integers from zero to n, except for one number that is missing. In this problem we cannot access an entire integer in in with a single instruction. The elements of A are represented in binary, and the only operation we can use to access them is "fetch the jth bit of A[i]," which taskes constant time. Write code to find the missing integer. Can you do it in O(n) time?

5.8 A monochrome screen is stored as a single array of bytes, allowing eight consecutive pixels to be stored in one byte. The screen has width w, where w is divisble by 8 (that is, no byte will be split across rows). The height of the screen, of course, can be dervied from the length of the array and width. Implement a function, DrawHorizontalLine(byte[] screen, int width, int x1, int x2, int y) which draws a horizontal line from (x1, y) to (x2, y). 
