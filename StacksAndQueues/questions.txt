1. Describe how you would use a single array to implement 3 stacks.
2. How would you design a stack which in addition to push() and pop() also has a method min() which returns the minimum element? All of push(), pop(), and min() should operate in O(1) time.
3. Imagine a (literal) stack of plates. If the stack gets too high it, might topple. Therefore, in real life, we would likely start a new stack when the previous stack reaches some threshold. Implement a data structure, SetOfStacks, that mimics this. SetOfStacks should be composed of several stacks and should create a new stack once the previous one exceeds capacity. SetOfStacks::push() and SetOfStacks::pop() should behave identically to Stack::push() and Stack::pop(). FOLLOW UP Implement a method popAt(int index) which performs a pop operation on a specific sub-stack.
4. In the classic problem of Towers of Hanoi you have 3 towers and N disks of different sizes which you can slide onto any tower. The puzzle starts with the disks sorted in ascending order or size form top to bottom (each disk sits atop a larger disk). You have the following constraints (1) Only one disk may be moved at a time. (2) A disk is slid of the top of one tower onto the next tower. (3) A disk may only be placed atop a larger disk. Write a program to move the disks from the first tower to the last using Stacks.
5. Implement MyQueue class which implements a queue using two Stacks.
6. Write a program to sort a Stack in ascending order (with the biggest items on top). You may use at most one additional Stack to hold items but you may not copy the elements into any other data structure. The Stack supports the following operations -- push(), pop(), peek(), and isEmpty().
7. An animal shelter holds only dogs and cats and operates on a strictly "first in, first out" basis. People must adopt either the "oldest" (based on arrival time) of all the animals at the sheleter, or they may select whether they prefer a dog or a cat (and will receive the oldest animal of that type). They cannot select which specific animal they would like. Create the data structures to maintain this system and implement operations such as enqueue(), dequeueAny(), dequeueDog(), and dequeueCat(). You must use the built in LinkedList data structure.
 
